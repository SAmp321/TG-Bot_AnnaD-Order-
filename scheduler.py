from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
import logging

logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = AsyncIOScheduler()
bot_instance = None  # –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–∑–∂–µ

def init_scheduler(bot):
    global bot_instance
    bot_instance = bot
    scheduler.start()
    logger.info("üü¢ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")

async def send_reminder(user_id: int, days_left: int):
    try:
        await bot_instance.send_message(
            chat_id=user_id,
            text=f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –î–æ—Å—Ç—É–ø –∫ –≤–µ–±–∏–Ω–∞—Ä—É –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days_left} –¥–Ω–µ–π.\n"
                "–£—Å–ø–µ–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ! üöÄ"
        )
        logger.info(f"‚úâÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ user_id={user_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è user_id={user_id}: {e}")

async def add_reminder(user_id: int, days_left: int, seconds: int = 15, reminder_num: int = 0):
    try:
        scheduler.add_job(
            send_reminder,
            'date',
            run_date=datetime.now() + timedelta(seconds=seconds),
            args=[user_id, days_left],
            id=f"reminder_{user_id}_{reminder_num}"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
        )
        logger.info(f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #{reminder_num} –¥–ª—è user_id={user_id} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {e}")